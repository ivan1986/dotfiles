[color]
	status = auto
	branch = auto
	diff = auto
	ui = true

[color "diff"]
	new = yellow
	old = red
	meta = magenta
	frag = cyan

[alias]
	st = status --short
	b = "!git for-each-ref --sort='-committerdate' --format='%(color:green)%(committerdate:relative)%(color:reset)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
	ba = branch -a -v -v
	ci = commit
	co = checkout
	del = rm -r --cached

	pull-all = !"for b in $(git for-each-ref refs/heads --format='%(refname)') ; do git checkout ${b#refs/heads/} ; git pull --ff-only ; done"
	it = "!git init && git commit -m 'root' --allow-empty"
	please = push --force-with-lease

	d = diff -C
	ds = diff -C --stat
	dsp = diff -C --stat -p
	dw = diff -C --color-words

	ls-del = ls-files -d
	ls-mod = ls-files -m
	ls-new = ls-files --exclude-standard -o
	ls-ign = ls-files --exclude-standard -o -i

	sb = show-branch --sha1-name

	ka = !gitk --all
	kasd = !gitk --all --simplify-by-decoration
	kad = !gitk --all --date-order
	l = log -C --decorate
	ls = log -C --stat --decorate
	lsp = log -C --stat -p --decorate
	lsd = log --graph '--pretty=tformat:%C(yellow)%h%Creset %Cgreen%ar%Creset %C(yellow)%d%Creset %s' --all --simplify-by-decoration
	lg = log --graph '--pretty=tformat:%C(yellow)%h%Creset %Cgreen%ar%Creset %C(yellow)%d%Creset %s'
	chlog = log --graph '--pretty=tformat:%h %d %s'

	amend = commit --amend -C HEAD
	merc = merge --no-ff
	msg = commit --amend
	uncommit = reset --hard HEAD^
	unstash = reset HEAD

	work-dir = !sh /usr/share/doc/git/contrib/workdir/git-new-workdir
	logpick = log --pretty='tformat:%h %s'

[http]
	sslVerify = false
[branch]
	autosetuprebase = always
[rerere]
	enabled = 1
[push]
	default = simple
	autoSetupRemote = true
[pull]
	ff = only
[fetch]
	prune = true
[credential]
	helper = store --file ~/.config/git/credentials

[include]
  path = user
[core]
	excludesfile = ~/.config/git/ignore
[init]
	defaultBranch = master
